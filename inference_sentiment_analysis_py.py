# -*- coding: utf-8 -*-
"""inference_sentiment_analysis.py.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12VuRcPtqgs-MMD4iRxr__tyTRVFg7nlv
"""

import pickle
import re
import re
import pandas as pd
from sklearn.model_selection import train_test_split as tts
from keras.layers import Dense, LSTM,Embedding, SpatialDropout1D
from keras.utils.np_utils import to_categorical
from keras.models import Sequential
from keras.preprocessing.text import Tokenizer
from keras.utils.data_utils import pad_sequences
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
import re
import string
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.model_selection import train_test_split as tts
def preprocess(text):
    text=re.sub('[''"",,,]','',text)
    text=re.sub('\n','',text)
    return text
def normalized_text(text):
    text=text.lower()
    text=re.sub('\[.*?\]','',text)
    text=re.sub('[%s]'%re.escape(string.punctuation),'',text)
    text=re.sub('\w*\d\w*','',text)
    return text

normalized=lambda x:normalized_text(x)#cleaned1
# Load the model
model = pickle.load(open('./model.pkl', 'rb'))
#model = pickle.load(open('/content/drive/MyDrive/model.pkl', 'rb'))

# Predict the sentiment of a new sentence
sentence = "It was a good movie."
preprocessed_sentence = preprocess(normalized_text(sentence))
predicted_sentiment = model.predict([preprocessed_sentence])

# Print the predicted sentiment
print(sentence, predicted_sentiment[0])

